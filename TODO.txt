+1. Сделать проект Eclipse из Maven.

// Андрей, привет!
 
//твой код весь перенесла в серверный проект
 
//https://github.com/hp279/interferometer.server.git
 
 
//он на основе мавена, поэтому все зависимости (к примеру библиотека org.ojalgo) прописываются в файле pom.xml
 
//тебе надо клонировать проект из репозитория, импортировать его в эклипс как мавен проект. Потом запустить mvn clean install //(это можно сделать из эклипса, pom.xml - run as - maven install). Все зависимости скачаются тебе в специальную папку, эта //папка в эклипсе подключена как папка с библиотеками.

Проект клонировал. А импортировать в эклипс не получается, и pom.xml - run as - maven install тоже не получается. Видимо, у меня каких-то эклипсовских плугинов не хватает. Поэтому я просто создал новый проект и вручную поставил все настройки.

2 (для Ани). Сделать визуализацию тех границ, которые программы пытается восстановить. Все манипуляции с полосами и их границами производятся в классе StripsInfo (у класса InterferometerRestoreFunction есть метод getCurrentStripsInfo()). У него есть метод getType, который возвращает тип пикселя:

public enum PixelType
	  {
		Nothing, // не идентифицирована
		MayBeMax, // возможная точка максимума
		PossibleMax, // точка максимума, причисленная к какой-то линии
		PossibleMaxAndBegin, // точка максимума, являющаяся началом или концом какой-то линии
		IThinkMax, // окончательно идентифицирована как точка максимума и часть линии
		MayBeMin, // возможная точка минимума
		PossibleMin, // точка минимума, причисленная к какой-то линии
		PossibleMinAndBegin, // точка минимума, являющаяся началом или концом какой-то линии
		IThinkMin // окончательно идентифицирована как точка минимума и часть линии
	  }
	  
Может быть, я сюда добавлю ещё границы между положительными и отрицательными значениями (MayBeNil, PossibleNil и т.п.). Хорошо бы изобразить картинку, загруженную из файла, и на ней нарисовать разными цветами соответствующие значения пикселей. Вариантов не так много, поэтому можно каждому значению подобрать свой цвет (пока что у меня есть только Nothing, MayBeMax, MayBeMin). Сейчас у меня это всё выводится в текстовые файлы в виде чисел, выровненных по ширине. Но такие здоровенные текстовые поля просматривать неудобно.:(

А потом можно будет в графическом интерфейсе задавать разные значения опций, от которых зависит алгоритм определения полос, StripsInfo.StripsOptions и смотреть, как меняется картинка. А то сейчас мне приходится каждый раз менять значения опций в исходнике и перезапускать программу.

+3. Те максимумы и минимумы, которые я восстановил, вытянуть в цепочки Border. Вторые производные не нужны, всё проще: берём 8 соседних клеток и смотрим, куда можно шагнуть.

+4. Сделать Border типа Nil (по значению функции, близкому к 0?).

